name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest #ubuntu-20.04
    steps:
      ## 1) 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      ## 2) 스프링 프로젝트 jar 파일 빌드
      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon --exclude-task test

      ## 3) Docker Hub에 이미지 push 하기
      - name: Docker build
        run: |
          docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
          docker build -t ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1 . 
          docker push ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1

      ## 4) Docker Hub에 Push한 이미지를 리눅스 서버에 받아와서 run
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_TEST_X_HOST }}
          username: ${{ secrets.AWS_TEST_X_USERNAME }}
          key: ${{ secrets.AWS_TEST_X_KEY }}
          envs: GITHUB_SHA
          script: |
            docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
            if [ "$(docker ps -aq)" ]; then
              docker rm -f $(docker ps -aq)
            fi
            if [ "$(docker images -q ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1)" ]; then
              docker rmi ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1
            fi
            docker pull ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1
            docker run --env-file=/home/ubuntu/.env -d -p 8080:8080 -p 18080:18080 ${{ secrets.USERNAME }}/${{ secrets.DOCKER_IMAGE }}:0.1
